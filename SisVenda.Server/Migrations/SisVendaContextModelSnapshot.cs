// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SisVenda.Infra.Contexts;

namespace SisVenda.Server.Migrations
{
    [DbContext(typeof(SisVendaContext))]
    partial class SisVendaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SisVenda.Domain.Entities.Bank", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Code")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("char(150)");

                    b.HasKey("Id");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.BankAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Account")
                        .HasColumnType("char(25)");

                    b.Property<string>("BankAgencyId")
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("BankAgencyId");

                    b.ToTable("BankAccount");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.BankAgency", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)");

                    b.Property<string>("BankId")
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Code")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("char(150)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("BankAgency");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.Losses", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtMoviment")
                        .HasColumnType("datetime");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Losses");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.PaymentMethods", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("char(150)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.PaymentStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Description")
                        .HasColumnType("char(150)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("PaymentStatus");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.People", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)");

                    b.Property<string>("AdressEmail")
                        .HasColumnType("char(50)");

                    b.Property<string>("CNPJ")
                        .HasColumnType("char(14)");

                    b.Property<string>("CPF")
                        .HasColumnType("char(11)");

                    b.Property<string>("City")
                        .HasColumnType("char(50)");

                    b.Property<string>("Contact")
                        .HasColumnType("char(150)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsCustomer")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSupplier")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("char(150)");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("char(30)");

                    b.Property<string>("Number")
                        .HasColumnType("char(10)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("char(10)");

                    b.Property<string>("State")
                        .HasColumnType("char(2)");

                    b.Property<string>("Street")
                        .HasColumnType("char(100)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("char(10)");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.Products", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(150)");

                    b.Property<decimal>("QtdStock")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("UnitMeasurementId")
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("UnitMeasurementId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.ProductsPrices", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEffective")
                        .HasColumnType("datetime");

                    b.Property<string>("ProductId")
                        .HasColumnType("varchar(32)");

                    b.Property<decimal>("SalesCost")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("SalesPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPrices");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.Purchases", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)");

                    b.Property<decimal>("AmountAddition")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("AmountDiscount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtMoviment")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentStatusId")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<string>("PeopleId")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentStatusId");

                    b.HasIndex("PeopleId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.PurchasesItems", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime");

                    b.Property<string>("ProductsId")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<string>("PurchasesId")
                        .HasColumnType("varchar(32)");

                    b.Property<decimal>("QuantityItem")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductsId");

                    b.HasIndex("PurchasesId");

                    b.ToTable("PurchasesItems");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.PurchasesPayments", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtPayment")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtPaymentForecast")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentMethodsId")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<string>("PurchasesId")
                        .HasColumnType("varchar(32)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentMethodsId");

                    b.HasIndex("PurchasesId");

                    b.ToTable("PurchasePayments");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.Sales", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)");

                    b.Property<decimal>("AmountAddition")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("AmountDiscount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtMoviment")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentStatusId")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<string>("PeopleId")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentStatusId");

                    b.HasIndex("PeopleId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.SalesItems", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime");

                    b.Property<string>("ProductsId")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<decimal>("QuantityItem")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("SalesId")
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("ProductsId");

                    b.HasIndex("SalesId");

                    b.ToTable("SalesItems");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.SalesPayment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtPayment")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtPaymentForecast")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentMethodsId")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<string>("SalesId")
                        .HasColumnType("varchar(32)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentMethodsId");

                    b.HasIndex("SalesId");

                    b.ToTable("SalesPayment");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.UnitMeasurement", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<decimal>("QuantityLosses")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.ToTable("UnitMeasurement");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.Users", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("char(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("char(20)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("char(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "e55c658093e44dacb722906e298c789e",
                            Name = "Administrador",
                            Password = "123",
                            User = "admin"
                        });
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.BankAccount", b =>
                {
                    b.HasOne("SisVenda.Domain.Entities.BankAgency", null)
                        .WithMany("BankAccount")
                        .HasForeignKey("BankAgencyId");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.BankAgency", b =>
                {
                    b.HasOne("SisVenda.Domain.Entities.Bank", null)
                        .WithMany("BankAgency")
                        .HasForeignKey("BankId");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.Losses", b =>
                {
                    b.HasOne("SisVenda.Domain.Entities.Products", "Product")
                        .WithMany("Losses")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.Products", b =>
                {
                    b.HasOne("SisVenda.Domain.Entities.UnitMeasurement", "UnitMeasurement")
                        .WithMany("Products")
                        .HasForeignKey("UnitMeasurementId");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.ProductsPrices", b =>
                {
                    b.HasOne("SisVenda.Domain.Entities.Products", "Product")
                        .WithMany("ProductsPrices")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.Purchases", b =>
                {
                    b.HasOne("SisVenda.Domain.Entities.PaymentStatus", "PaymentStatus")
                        .WithMany()
                        .HasForeignKey("PaymentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SisVenda.Domain.Entities.People", null)
                        .WithMany("Purchases")
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.PurchasesItems", b =>
                {
                    b.HasOne("SisVenda.Domain.Entities.Products", null)
                        .WithMany("PurchasesItems")
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SisVenda.Domain.Entities.Purchases", null)
                        .WithMany("PurchasesItems")
                        .HasForeignKey("PurchasesId");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.PurchasesPayments", b =>
                {
                    b.HasOne("SisVenda.Domain.Entities.PaymentMethods", null)
                        .WithMany("PurchasesPayments")
                        .HasForeignKey("PaymentMethodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SisVenda.Domain.Entities.Purchases", null)
                        .WithMany("PurchasePayments")
                        .HasForeignKey("PurchasesId");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.Sales", b =>
                {
                    b.HasOne("SisVenda.Domain.Entities.PaymentStatus", "PaymentStatus")
                        .WithMany()
                        .HasForeignKey("PaymentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SisVenda.Domain.Entities.People", null)
                        .WithMany("Sales")
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.SalesItems", b =>
                {
                    b.HasOne("SisVenda.Domain.Entities.Products", null)
                        .WithMany("SalesItems")
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SisVenda.Domain.Entities.Sales", null)
                        .WithMany("SalesItems")
                        .HasForeignKey("SalesId");
                });

            modelBuilder.Entity("SisVenda.Domain.Entities.SalesPayment", b =>
                {
                    b.HasOne("SisVenda.Domain.Entities.PaymentMethods", null)
                        .WithMany("SalesPayment")
                        .HasForeignKey("PaymentMethodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SisVenda.Domain.Entities.Sales", null)
                        .WithMany("SalesPayment")
                        .HasForeignKey("SalesId");
                });
#pragma warning restore 612, 618
        }
    }
}
